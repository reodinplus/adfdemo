{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-sw-cd"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/file_excel_data_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "storage_excel_src",
								"type": "DatasetReference",
								"parameters": {
									"containerName": {
										"value": "@pipeline().parameters.containerName",
										"type": "Expression"
									},
									"directoryName": {
										"value": "@pipeline().parameters.directoryName",
										"type": "Expression"
									},
									"fileName": " ",
									"sheetName": " "
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "storage_excel_src",
											"type": "DatasetReference",
											"parameters": {
												"containerName": {
													"value": "@pipeline().parameters.containerName",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@pipeline().parameters.directoryName",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"sheetName": {
													"value": "@pipeline().parameters.sheetName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azuresql_dst",
											"type": "DatasetReference",
											"parameters": {
												"tableNameWithSchema": {
													"value": "@replace(replace(pipeline().parameters.stgTableNameWithSchema, '[', ''), ']', '')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.p_truncate_table",
							"storedProcedureParameters": {
								"tableNameWithSchema": {
									"value": {
										"value": "@pipeline().parameters.stgTableNameWithSchema",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"containerName": {
						"type": "string",
						"defaultValue": "file-data"
					},
					"directoryName": {
						"type": "string",
						"defaultValue": "demo/ssiswork/订单数据"
					},
					"sheetName": {
						"type": "string",
						"defaultValue": "sheet1"
					},
					"stgTableNameWithSchema": {
						"type": "string",
						"defaultValue": "dbo.[Order]"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-07T07:34:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/file_excel_data_load_from_filesystem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "filesystem_ds_excel",
								"type": "DatasetReference",
								"parameters": {
									"directory": {
										"value": "@pipeline().parameters.directoryName",
										"type": "Expression"
									},
									"file": " ",
									"sheet": " "
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "filesystem_ds_excel",
											"type": "DatasetReference",
											"parameters": {
												"directory": {
													"value": "@pipeline().parameters.directoryName",
													"type": "Expression"
												},
												"file": {
													"value": "@item().name",
													"type": "Expression"
												},
												"sheet": {
													"value": "@pipeline().parameters.sheetName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azuresql_dst",
											"type": "DatasetReference",
											"parameters": {
												"tableNameWithSchema": {
													"value": "@replace(replace(pipeline().parameters.stgTableNameWithSchema, '[', ''), ']', '')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.p_truncate_table",
							"storedProcedureParameters": {
								"tableNameWithSchema": {
									"value": {
										"value": "@pipeline().parameters.stgTableNameWithSchema",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'), endswith(item().name, '.xlsx'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"directoryName": {
						"type": "string",
						"defaultValue": "00Project_Data_Source/02SSISWork/ProjectSource/订单数据"
					},
					"sheetName": {
						"type": "string",
						"defaultValue": "sheet1"
					},
					"stgTableNameWithSchema": {
						"type": "string",
						"defaultValue": "dbo.[Order]"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-07T07:34:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/file_src_stg_error')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "foreach容器不能嵌套foreach容器",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select *\nfrom (values\n\t(N'file-data', N'demo/ssiswork/地点数据', N'Sheet1', N'dbo.City'),\n\t(N'file-data', N'demo/ssiswork/产品数据', N'Sheet1', N'dbo.Product'),\n\t(N'file-data', N'demo/ssiswork/客户数据', N'Sheet1', N'dbo.Customer'),\n\t(N'file-data', N'demo/ssiswork/订单数据', N'Sheet1', N'dbo.[Order]')\n) t1(container_name,direcotry_name,sheet_name, stg);",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_dst",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": " "
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "Stored procedure1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "storage_excel_src",
											"type": "DatasetReference",
											"parameters": {
												"containerName": {
													"value": "@item().containerName",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@item().directoryName",
													"type": "Expression"
												},
												"fileName": " ",
												"sheetName": " "
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "ForEach1_copy1",
									"type": "ForEach",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Get Metadata1').output.childItems",
											"type": "Expression"
										},
										"activities": [
											{
												"name": "Copy data1_copy1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ExcelSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "storage_excel_src",
														"type": "DatasetReference",
														"parameters": {
															"containerName": {
																"value": "@item().containerName",
																"type": "Expression"
															},
															"directoryName": {
																"value": "@item().directoryName",
																"type": "Expression"
															},
															"fileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"sheetName": {
																"value": "@variables('sheetName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "azuresql_dst",
														"type": "DatasetReference",
														"parameters": {
															"tableNameWithSchema": {
																"value": "@replace(replace(item().stg, '[', ''), ']', '')",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "dbo.p_truncate_table",
										"storedProcedureParameters": {
											"tableNameWithSchema": {
												"value": {
													"value": "@item().stg",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "sqldb_dw",
										"type": "LinkedServiceReference",
										"parameters": {
											"dbName": "sqldevswcd",
											"dbUserName": "sqladminuser01",
											"dbUserPwd": "1qaz!QAZ",
											"dbServerName": "sqlserverdevswcd.database.windows.net"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"sheetName": {
						"type": "String",
						"defaultValue": "sheet1"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-29T08:24:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/increament_asql_to_asql_data_source_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select isnull(max(LastModifytime), '1900-01-01') MaxLastModifytime from dbo.data_destination_table",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "adfdemo_asql_ds",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "adfdemo_stg_sales"
								}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{'dbo'}.@{'data_source_table'}"
							},
							{
								"name": "Destination",
								"value": "@{'dbo'}.@{'data_destination_table'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from dbo.data_source_table where \tLastModifytime > '@{activity('Lookup1').output.firstRow.MaxLastModifytime}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PersonID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PersonID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifytime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LastModifytime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adfdemo_asql_ds_src",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "data_source_table"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_ds",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "data_destination_table"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFDemo"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-20T03:19:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/increament_loop_blob_excel_to_asql_adfdemo_stg_sales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadate Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Lookup Max LastModifyTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "adfdemo_storage_ds",
								"type": "DatasetReference",
								"parameters": {
									"container": "adfdemo",
									"directory": "sales",
									"file": " ",
									"sheet": " "
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@addSeconds(addHours(activity('Lookup Max LastModifyTime').output.firstRow.max_file_last_modifty_time, -8), 1)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Filter file by extendname",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadate Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadate Files').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endsWith(item().name, '.xlsx')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter file by extendname",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter file by extendname').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata of file",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "adfdemo_storage_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": "adfdemo",
												"directory": "sales",
												"file": {
													"value": "@item().name",
													"type": "Expression"
												},
												"sheet": " "
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get Metadata of file",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{'adfdemo'}/@{'sales'}/@{item().name}"
										},
										{
											"name": "Destination",
											"value": "@{'dbo'}.@{'adfdemo_stg_sales'}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"additionalColumns": [
												{
													"name": "file_name",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "file_last_modifty_time",
													"value": {
														"value": "@addHours(activity('Get Metadata of file').output.lastModified, 8)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "file_name",
														"type": "String"
													},
													"sink": {
														"name": "file_name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "file_last_modifty_time",
														"type": "String"
													},
													"sink": {
														"name": "file_last_modifty_time",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ProdunctId",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "product_id",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Qty",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "qty",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "UnitPrice",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "unit_price",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 4,
														"precision": 19
													}
												},
												{
													"source": {
														"name": "SubTotal",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "subtotal",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 4,
														"precision": 19
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "adfdemo_storage_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": "adfdemo",
												"directory": "sales",
												"file": {
													"value": "@item().name",
													"type": "Expression"
												},
												"sheet": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "adfdemo_asql_ds",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "adfdemo_stg_sales"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup Max LastModifyTime",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select isnull(max(file_last_modifty_time), '1900-01-01') max_file_last_modifty_time from  dbo.adfdemo_stg_sales",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "adfdemo_asql_ds",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "adfdemo_stg_sales"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFDemo"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-20T03:19:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/loop_blob_excel_to_asql_adfdemo_stg_sales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "adfdemo_storage_ds",
								"type": "DatasetReference",
								"parameters": {
									"container": "adfdemo",
									"directory": "sales",
									"file": " ",
									"sheet": " "
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEach Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Files').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get Metadata of File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{'adfdemo'}/@{'sales'}/@{item().name}"
										},
										{
											"name": "Destination",
											"value": "@{'dbo'}.@{'adfdemo_stg_sales'}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"additionalColumns": [
												{
													"name": "file_name",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "file_last_modifty_time",
													"value": {
														"value": "@addHours(activity('Get Metadata of File').output.lastModified, 8)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "file_name",
														"type": "String"
													},
													"sink": {
														"name": "file_name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "file_last_modifty_time",
														"type": "String"
													},
													"sink": {
														"name": "file_last_modifty_time",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ProdunctId",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "product_id",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Qty",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "qty",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "UnitPrice",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "unit_price",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 4,
														"precision": 19
													}
												},
												{
													"source": {
														"name": "SubTotal",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "subtotal",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 4,
														"precision": 19
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "adfdemo_storage_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": "adfdemo",
												"directory": "sales",
												"file": {
													"value": "@item().name",
													"type": "Expression"
												},
												"sheet": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "adfdemo_asql_ds",
											"type": "DatasetReference",
											"parameters": {
												"schema": "dbo",
												"table": "adfdemo_stg_sales"
											}
										}
									]
								},
								{
									"name": "Get Metadata of File",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "adfdemo_storage_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": "adfdemo",
												"directory": "sales",
												"file": {
													"value": "@item().name",
													"type": "Expression"
												},
												"sheet": " "
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFDemo"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-20T03:19:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mssql_to_asql_employee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.employee"
							},
							{
								"name": "Destination",
								"value": "dbo.employee"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adfdemo_mssql_dataset_employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_dataset_employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFDemo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-21T07:38:13Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/object')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "truncate table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@variables('truncateProcWithSchema')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"tableNameWithSchema": {
									"value": {
										"value": "@variables('stgTableNameWithSchema')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					},
					{
						"name": "get last modify date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "truncate table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select last_modify_date = isnull(max(modify_date), '1900-01-01') from dbo.ods_object",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_dst",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": {
										"value": "@variables('odsTableNameWithSchema')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "src to stg",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "get last modify date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat(\n    variables('srcTableSQL'), \n\t' where modify_date > ''', activity('get last modify date').output.firstRow.last_modify_date, ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "object_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "object_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "principal_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "principal_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "schema_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "schema_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "parent_object_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "parent_object_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "type",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "type_desc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "type_desc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "create_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "create_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "modify_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "modify_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "is_ms_shipped",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_ms_shipped",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "is_published",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_published",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "is_schema_published",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_schema_published",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "azuresql_dst",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": {
										"value": "@variables('srcTableNameWithSchema')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azuresql_dst",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": {
										"value": "@variables('stgTableNameWithSchema')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "stg to ods",
						"description": "",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "src to stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@variables('odsProcWithSchema')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.batch_id",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"batch_id": {
						"type": "string",
						"defaultValue": "0"
					}
				},
				"variables": {
					"truncateProcWithSchema": {
						"type": "String",
						"defaultValue": "dbo.p_truncate_table"
					},
					"stgTableNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.stg_object"
					},
					"odsTableNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.ods_object"
					},
					"srcTableSQL": {
						"type": "String",
						"defaultValue": "select name, object_id, principal_id, schema_id, parent_object_id,\ttype, type_desc, create_date, modify_date, is_ms_shipped, is_published,\tis_schema_published from dbo.src_object"
					},
					"srcTableNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.src_object"
					},
					"odsProcWithSchema": {
						"type": "String",
						"defaultValue": "dbo.p_etl_ods_object"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-11T06:43:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/object_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "truncate table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@variables('truncateProcWithSchema')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"tableNameWithSchema": {
									"value": {
										"value": "@variables('stgTableNameWithSchema')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					},
					{
						"name": "get last modify date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "truncate table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select last_modify_date = isnull(max(modify_date), '1900-01-01') from dbo.ods_object",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_dst",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": {
										"value": "@variables('odsTableNameWithSchema')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "stg to ods",
						"description": "",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@variables('odsProcWithSchema')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.batch_id",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "get last modify date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {
									"srcTableSQL": {
										"value": "'@{concat(variables('srcTableSQL'),  ' where modify_date>\\''', activity('get last modify date').output.firstRow.last_modify_date,  '\\''')}'",
										"type": "Expression"
									},
									"dstTableNameWithSchema": {
										"value": "'@{variables('stgTableNameWithSchema')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								},
								"linkedServiceParameters": {
									"source1": {
										"linkedService": {
											"dbName": "sqldevswcd",
											"dbUserName": "sqladminuser01",
											"dbUserPwd": "1qaz!QAZ",
											"dbServerName": "sqlserverdevswcd.database.windows.net"
										}
									},
									"sink1": {
										"linkedService": {
											"dbName": "sqldevswcd",
											"dbUserName": "sqladminuser01",
											"dbUserPwd": "1qaz!QAZ",
											"dbServerName": "sqlserverdevswcd.database.windows.net"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"batch_id": {
						"type": "string",
						"defaultValue": "0"
					}
				},
				"variables": {
					"truncateProcWithSchema": {
						"type": "String",
						"defaultValue": "dbo.p_truncate_table"
					},
					"stgTableNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.stg_object"
					},
					"odsTableNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.ods_object"
					},
					"srcTableSQL": {
						"type": "String",
						"defaultValue": "select name, object_id,principal_id,schema_id,parent_object_id,type,type_desc,create_date,modify_date,is_ms_shipped,is_published,is_schema_published from dbo.src_object"
					},
					"srcTableNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.src_object"
					},
					"odsProcWithSchema": {
						"type": "String",
						"defaultValue": "dbo.p_etl_ods_object"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-29T02:32:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web_Get AcceccTokenObj",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=@{variables('corpid')}&corpsecret=@{variables('corpsecret')}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SVar_Set Var accecc_token",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web_Get AcceccTokenObj",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "access_token",
							"value": {
								"value": "@activity('Web_Get AcceccTokenObj').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web_Set Department List",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SVar_Set Var accecc_token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "https://qyapi.weixin.qq.com/cgi-bin/department/list?access_token=@{variables('access_token')}&id",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web_Get User List",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SVar_Set Var accecc_token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "https://qyapi.weixin.qq.com/cgi-bin/user/list?access_token=@{variables('access_token')}&department_id=1&fetch_child=1&status=0",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SVar_Set Var accecc_token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_rest_qiweb_uselist",
								"type": "DatasetReference",
								"parameters": {
									"access_token": {
										"value": "@variables('access_token')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"corpid": {
						"type": "String",
						"defaultValue": "ww6756f2ce4a5f10ff"
					},
					"corpsecret": {
						"type": "String",
						"defaultValue": "VcCpyk0srxuJosFusMfA_mfGzJNrNsdLTPPuqbJ61s0"
					},
					"access_token": {
						"type": "String"
					}
				},
				"folder": {
					"name": "QyWeChat"
				},
				"annotations": [],
				"lastPublishTime": "2025-09-02T10:00:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_to_asql_adfdemo_rest_one')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "@{'dbo'}.@{'adfdemo_rest_one'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "false"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['data']['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['data']['tag']"
										},
										"sink": {
											"name": "tag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['data']['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['data']['origin']"
										},
										"sink": {
											"name": "origin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['data']['content']"
										},
										"sink": {
											"name": "content",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['data']['created_at']"
										},
										"sink": {
											"name": "created_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['data']['updated_at']"
										},
										"sink": {
											"name": "updated_at",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "adfdemo_rest_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_ds",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "adfdemo_rest_one"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFDemo"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-20T03:19:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_to_asql_adfdemo_rest_two')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "@{'dbo'}.@{'adfdemo_rest_two'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['category']"
										},
										"sink": {
											"name": "category",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['difficulty']"
										},
										"sink": {
											"name": "difficulty",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['question']"
										},
										"sink": {
											"name": "question",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['correct_answer']"
										},
										"sink": {
											"name": "correct_answer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['incorrect_answers']"
										},
										"sink": {
											"name": "incorrect_answers",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['results']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "adfdemo_rest_opentdb_com",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_ds",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "adfdemo_rest_two"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFDemo"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-20T03:19:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "通过文件的lastModified实现增量",
				"activities": [
					{
						"name": "Get Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "LK_Get File Max Last Modified Datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "storage_excel_src",
								"type": "DatasetReference",
								"parameters": {
									"containerName": {
										"value": "@variables('srcContainerName')",
										"type": "Expression"
									},
									"directoryName": {
										"value": "@variables('srcDirecotryName')",
										"type": "Expression"
									},
									"fileName": " ",
									"sheetName": " "
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@addSeconds(addHours(activity('LK_Get File Max Last Modified Datetime').output.firstRow.last_modified_time, -8), 1)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEach Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Valid Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Valid Files').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY_Extract Data From File And Load Into STG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get File Metadata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"additionalColumns": [
												{
													"name": "FileName",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "FileLastModifyDate",
													"value": {
														"value": "@addHours(activity('Get File Metadata').output.lastModified, 8)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "FileName"
													},
													"sink": {
														"name": "file_name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "FileLastModifyDate"
													},
													"sink": {
														"name": "file_last_modifty_time",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ProdunctId",
														"physicalType": "String"
													},
													"sink": {
														"name": "product_id",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Qty",
														"physicalType": "String"
													},
													"sink": {
														"name": "qty",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "UnitPrice",
														"physicalType": "String"
													},
													"sink": {
														"name": "unit_price",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 4,
														"precision": 19
													}
												},
												{
													"source": {
														"name": "SubTotal",
														"physicalType": "String"
													},
													"sink": {
														"name": "subtotal",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 4,
														"precision": 19
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "storage_excel_src",
											"type": "DatasetReference",
											"parameters": {
												"containerName": {
													"value": "@variables('srcContainerName')",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@variables('srcDirecotryName')",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"sheetName": {
													"value": "@variables('srcSheetName')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azuresql_dst",
											"type": "DatasetReference",
											"parameters": {
												"tableNameWithSchema": {
													"value": "@variables('stgTableNameWithSchema')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Get File Metadata",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "storage_excel_src",
											"type": "DatasetReference",
											"parameters": {
												"containerName": {
													"value": "@variables('srcContainerName')",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@variables('srcDirecotryName')",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"sheetName": " "
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Filter Valid Files",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Files').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name, variables('srcFileExtendName'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SP_Truncate Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@variables('truncateProcWithSchema')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"tableNameWithSchema": {
									"value": {
										"value": "@variables('stgTableNameWithSchema')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					},
					{
						"name": "SP_Move STG To ODS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@variables('odsProcNameWithSchema')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.batch_id",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					},
					{
						"name": "LK_Get File Max Last Modified Datetime",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP_Truncate Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select last_modified_time = ISNULL(MAX(file_last_modifty_time), '1900-01-01') from dbo.ods_sales",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_dst",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": {
										"value": "@variables('stgTableNameWithSchema')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"batch_id": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"srcContainerName": {
						"type": "String",
						"defaultValue": "file-data"
					},
					"srcDirecotryName": {
						"type": "String",
						"defaultValue": "demo/sales"
					},
					"srcSheetName": {
						"type": "String",
						"defaultValue": "sheet1"
					},
					"stgTableNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.stg_sales"
					},
					"odsProcNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.p_etl_ods_sales"
					},
					"srcFileExtendName": {
						"type": "String",
						"defaultValue": ".xlsx"
					},
					"truncateProcWithSchema": {
						"type": "String",
						"defaultValue": "dbo.p_truncate_table"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-21T05:38:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "通过文件的lastModified实现增量",
				"activities": [
					{
						"name": "Get Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "LK_Get File Max Last Modified Datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "storage_excel_src2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": {
										"value": "@variables('srcContainerName')",
										"type": "Expression"
									},
									"directoryName": {
										"value": "@variables('srcDirecotryName')",
										"type": "Expression"
									},
									"fileName": " ",
									"sheetName": " "
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@addSeconds(addHours(activity('LK_Get File Max Last Modified Datetime').output.firstRow.last_modified_time, -8), 1)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEach Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Valid Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Valid Files').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY_Extract Data From File And Load Into STG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get File Metadata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"additionalColumns": [
												{
													"name": "FileName",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "FileLastModifyDate",
													"value": {
														"value": "@addHours(activity('Get File Metadata').output.lastModified, 8)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "FileName"
													},
													"sink": {
														"name": "file_name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "FileLastModifyDate"
													},
													"sink": {
														"name": "file_last_modifty_time",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ProdunctId",
														"physicalType": "String"
													},
													"sink": {
														"name": "product_id",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Qty",
														"physicalType": "String"
													},
													"sink": {
														"name": "qty",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "UnitPrice",
														"physicalType": "String"
													},
													"sink": {
														"name": "unit_price",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 4,
														"precision": 19
													}
												},
												{
													"source": {
														"name": "SubTotal",
														"physicalType": "String"
													},
													"sink": {
														"name": "subtotal",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 4,
														"precision": 19
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "storage_excel_src2",
											"type": "DatasetReference",
											"parameters": {
												"containerName": {
													"value": "@variables('srcContainerName')",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@variables('srcDirecotryName')",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"sheetName": {
													"value": "@variables('srcSheetName')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azuresql_dst1",
											"type": "DatasetReference",
											"parameters": {
												"tableNameWithSchema": {
													"value": "@variables('stgTableNameWithSchema')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Get File Metadata",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "storage_excel_src2",
											"type": "DatasetReference",
											"parameters": {
												"containerName": {
													"value": "@variables('srcContainerName')",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@variables('srcDirecotryName')",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"sheetName": " "
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Filter Valid Files",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Files').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name, variables('srcFileExtendName'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SP_Truncate Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@variables('truncateProcWithSchema')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"tableNameWithSchema": {
									"value": {
										"value": "@variables('stgTableNameWithSchema')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					},
					{
						"name": "SP_Move STG To ODS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@variables('odsProcNameWithSchema')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.batch_id",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					},
					{
						"name": "LK_Get File Max Last Modified Datetime",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP_Truncate Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select last_modified_time = ISNULL(MAX(file_last_modifty_time), '1900-01-01') from dbo.ods_sales",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_dst1",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": {
										"value": "@variables('stgTableNameWithSchema')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"batch_id": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"srcContainerName": {
						"type": "String",
						"defaultValue": "file-data"
					},
					"srcDirecotryName": {
						"type": "String",
						"defaultValue": "demo/sales"
					},
					"srcSheetName": {
						"type": "String",
						"defaultValue": "sheet1"
					},
					"stgTableNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.stg_sales"
					},
					"odsProcNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.p_etl_ods_sales"
					},
					"srcFileExtendName": {
						"type": "String",
						"defaultValue": ".xlsx"
					},
					"truncateProcWithSchema": {
						"type": "String",
						"defaultValue": "dbo.p_truncate_table"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-07T08:45:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "通过文件的lastModified过滤实现增量",
				"activities": [
					{
						"name": "Get Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "LK_Get File Max Last Modified Datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "storage_excel_src",
								"type": "DatasetReference",
								"parameters": {
									"containerName": {
										"value": "@variables('srcContainerName')",
										"type": "Expression"
									},
									"directoryName": {
										"value": "@variables('srcDirecotryName')",
										"type": "Expression"
									},
									"fileName": " ",
									"sheetName": " "
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEach Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Valid Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Valid Files').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get File Metadata",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "storage_excel_src",
											"type": "DatasetReference",
											"parameters": {
												"containerName": {
													"value": "@variables('srcContainerName')",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@variables('srcDirecotryName')",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"sheetName": " "
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get File Metadata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(addHours(activity('Get File Metadata').output.lastModified, 8), activity('LK_Get File Max Last Modified Datetime').output.firstRow.last_modified_time)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "COPY_Extract Data From File And Load Into STG",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ExcelSource",
														"additionalColumns": [
															{
																"name": "FileName",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "FileLastModifyDate",
																"value": {
																	"value": "@addHours(activity('Get File Metadata').output.lastModified, 8)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "FileName",
																	"type": "String"
																},
																"sink": {
																	"name": "file_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "FileLastModifyDate",
																	"type": "String"
																},
																"sink": {
																	"name": "file_last_modifty_time",
																	"type": "DateTime",
																	"physicalType": "datetime"
																}
															},
															{
																"source": {
																	"name": "ProdunctId",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "product_id",
																	"type": "Int32",
																	"physicalType": "int"
																}
															},
															{
																"source": {
																	"name": "Qty",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "qty",
																	"type": "Int32",
																	"physicalType": "int"
																}
															},
															{
																"source": {
																	"name": "UnitPrice",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "unit_price",
																	"type": "Decimal",
																	"physicalType": "decimal",
																	"scale": 4,
																	"precision": 19
																}
															},
															{
																"source": {
																	"name": "SubTotal",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "subtotal",
																	"type": "Decimal",
																	"physicalType": "decimal",
																	"scale": 4,
																	"precision": 19
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "storage_excel_src",
														"type": "DatasetReference",
														"parameters": {
															"containerName": {
																"value": "@variables('srcContainerName')",
																"type": "Expression"
															},
															"directoryName": {
																"value": "@variables('srcDirecotryName')",
																"type": "Expression"
															},
															"fileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"sheetName": {
																"value": "@variables('srcSheetName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "azuresql_dst",
														"type": "DatasetReference",
														"parameters": {
															"tableNameWithSchema": {
																"value": "@variables('stgTableNameWithSchema')",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Filter Valid Files",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Files').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name, variables('srcFileExtendName'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SP_Truncate Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@variables('truncateProcWithSchema')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"tableNameWithSchema": {
									"value": {
										"value": "@variables('stgTableNameWithSchema')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					},
					{
						"name": "SP_Move STG To ODS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@variables('odsProcNameWithSchema')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.batch_id",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					},
					{
						"name": "LK_Get File Max Last Modified Datetime",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP_Truncate Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select last_modified_time = MAX(file_last_modifty_time) from dbo.ods_sales",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_dst",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": {
										"value": "@variables('stgTableNameWithSchema')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"batch_id": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"srcContainerName": {
						"type": "String",
						"defaultValue": "file-data"
					},
					"srcDirecotryName": {
						"type": "String",
						"defaultValue": "demo/sales"
					},
					"srcSheetName": {
						"type": "String",
						"defaultValue": "sheet1"
					},
					"stgTableNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.stg_sales"
					},
					"odsProcNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.p_etl_ods_sales"
					},
					"srcFileExtendName": {
						"type": "String",
						"defaultValue": ".xlsx"
					},
					"truncateProcWithSchema": {
						"type": "String",
						"defaultValue": "dbo.p_truncate_table"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T02:38:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "包含完整的文件备份，不增量",
				"activities": [
					{
						"name": "Get Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "SP_Truncate Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "storage_excel_src",
								"type": "DatasetReference",
								"parameters": {
									"containerName": {
										"value": "@variables('srcContainerName')",
										"type": "Expression"
									},
									"directoryName": {
										"value": "@variables('srcDirecotryName')",
										"type": "Expression"
									},
									"fileName": " ",
									"sheetName": " "
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEach Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Valid Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Valid Files').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get File Metadata",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "storage_excel_src",
											"type": "DatasetReference",
											"parameters": {
												"containerName": {
													"value": "@variables('srcContainerName')",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@variables('srcDirecotryName')",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"sheetName": " "
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Backup file by copy file",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Extract Source Data To STG",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "storage_binary",
											"type": "DatasetReference",
											"parameters": {
												"contrainerName": {
													"value": "@variables('srcContainerName')",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@variables('srcDirecotryName')",
													"type": "Expression"
												},
												"fileName": "@item().name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "storage_binary",
											"type": "DatasetReference",
											"parameters": {
												"contrainerName": {
													"value": "@variables('srcContainerName')",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@concat(\n    variables('srcDirecotryName'),\n    if(equals(variables('isSuccess'), 1), '/success', '/failed')\n)",
													"type": "Expression"
												},
												"fileName": {
													"value": "@concat(\n    substring(item().name, 0, indexOf(item().name, variables('srcFileExtendName'))), \n    '_',\n    formatDateTime(addHours(utcNow(), 8), 'yyyyMMddHHmmss'),variables('srcFileExtendName')\n)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Source File",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Backup file by copy file",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "storage_binary",
											"type": "DatasetReference",
											"parameters": {
												"contrainerName": {
													"value": "@variables('srcContainerName')",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@variables('srcDirecotryName')",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Extract Source Data To STG",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get File Metadata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(1,1)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "COPY_Extract Data From File And Load Into STG",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Init isSuccess Success",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ExcelSource",
														"additionalColumns": [
															{
																"name": "FileName",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "FileLastModifyDate",
																"value": {
																	"value": "@addHours(activity('Get File Metadata').output.lastModified, 8)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "FileName",
																	"type": "String"
																},
																"sink": {
																	"name": "file_name",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "FileLastModifyDate",
																	"type": "String"
																},
																"sink": {
																	"name": "file_last_modifty_time",
																	"type": "DateTime",
																	"physicalType": "datetime"
																}
															},
															{
																"source": {
																	"name": "ProdunctId",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "product_id",
																	"type": "Int32",
																	"physicalType": "int"
																}
															},
															{
																"source": {
																	"name": "Qty",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "qty",
																	"type": "Int32",
																	"physicalType": "int"
																}
															},
															{
																"source": {
																	"name": "UnitPrice",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "unit_price",
																	"type": "Decimal",
																	"physicalType": "decimal",
																	"scale": 4,
																	"precision": 19
																}
															},
															{
																"source": {
																	"name": "SubTotal",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "subtotal",
																	"type": "Decimal",
																	"physicalType": "decimal",
																	"scale": 4,
																	"precision": 19
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "storage_excel_src",
														"type": "DatasetReference",
														"parameters": {
															"containerName": {
																"value": "@variables('srcContainerName')",
																"type": "Expression"
															},
															"directoryName": {
																"value": "@variables('srcDirecotryName')",
																"type": "Expression"
															},
															"fileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"sheetName": {
																"value": "@variables('srcSheetName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "azuresql_dst",
														"type": "DatasetReference",
														"parameters": {
															"tableNameWithSchema": {
																"value": "@variables('stgTableNameWithSchema')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Set isSuccess Failed",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "COPY_Extract Data From File And Load Into STG",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "isSuccess",
													"value": 0
												}
											},
											{
												"name": "Init isSuccess Success",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "isSuccess",
													"value": 1
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Filter Valid Files",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Files').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name, variables('srcFileExtendName'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SP_Truncate Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@variables('truncateProcWithSchema')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"tableNameWithSchema": {
									"value": {
										"value": "@variables('stgTableNameWithSchema')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					},
					{
						"name": "SP_Move STG To ODS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@variables('odsProcNameWithSchema')",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.batch_id",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"batch_id": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"srcContainerName": {
						"type": "String",
						"defaultValue": "file-data"
					},
					"srcDirecotryName": {
						"type": "String",
						"defaultValue": "demo/sales"
					},
					"srcSheetName": {
						"type": "String",
						"defaultValue": "sheet1"
					},
					"stgTableNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.stg_sales"
					},
					"odsProcNameWithSchema": {
						"type": "String",
						"defaultValue": "dbo.p_etl_ods_sales"
					},
					"srcFileExtendName": {
						"type": "String",
						"defaultValue": ".xlsx"
					},
					"truncateProcWithSchema": {
						"type": "String",
						"defaultValue": "dbo.p_truncate_table"
					},
					"isSuccess": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T02:37:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "storage_account",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "compose1",
							"flowlet": {
								"referenceName": "flowlet2",
								"type": "DataFlowReference",
								"parameters": {}
							}
						}
					],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: true,",
						"     format: 'excel',",
						"     container: 'file-data',",
						"     folderPath: 'demo/ssiswork/地点数据',",
						"     sheetName: 'Sheet1',",
						"     firstRowAsHeader: true) ~> source1",
						"compose(composition: 'flowlet2') ~> compose1@(output1)",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'city',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pq_employee')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"folder": {
					"name": "demo"
				},
				"typeProperties": {
					"sources": [
						{
							"name": "adfdemo_asql_dataset_employee",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> adfdemo_asql_dataset_employee",
							"dataset": {
								"referenceName": "adfdemo_asql_dataset_employee",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared adfdemo_asql_dataset_employee = let AdfDoc = Sql.Database(\"sqlserverdevswcd.database.windows.net\", \"sqldevswcd\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"dbo\",Item=\"employee\"]}[Data] in InputTable;\r\nshared UserQuery = let Source = #\"adfdemo_asql_dataset_employee\" in Source;\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/qp_sales')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"folder": {
					"name": "demo"
				},
				"typeProperties": {
					"sources": [
						{
							"name": "adfdemo_asql_dataset",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> adfdemo_asql_dataset",
							"dataset": {
								"referenceName": "adfdemo_asql_dataset",
								"type": "DatasetReference"
							}
						},
						{
							"name": "adfdemo_asql_ds",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> adfdemo_asql_ds",
							"dataset": {
								"referenceName": "adfdemo_asql_ds",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared adfdemo_asql_dataset = let AdfDoc = Sql.Database(\"sqlserverdevswcd.database.windows.net\", \"sqldevswcd\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"dbo\",Item=\"EmployeeDemo\"]}[Data] in InputTable;\r\nshared adfdemo_asql_ds = let AdfDoc = Sql.Database(\"sqlserverdevswcd.database.windows.net\", \"sqldevswcd\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"dbo\",Item=\"stg_sales\"]}[Data] in InputTable;\r\nshared UserQuery = let Source = #\"adfdemo_asql_dataset\" in Source;\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_mdm_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ep_bronze_mdm_customer",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "bronze_mdm_customer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dstContainer": {
									"value": "@pipeline().parameters.dtContainer",
									"type": "Expression"
								},
								"dt": {
									"value": "@pipeline().parameters.dt",
									"type": "Expression"
								},
								"daysOffset": {
									"value": "@pipeline().parameters.daysOffset",
									"type": "Expression"
								},
								"dstCatalog": {
									"value": "@pipeline().parameters.dtCatalog",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ep_bronze_mdm_city",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "bronze_mdm_city",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dstContainer": {
									"value": "@pipeline().parameters.dtContainer",
									"type": "Expression"
								},
								"dt": {
									"value": "@pipeline().parameters.dt",
									"type": "Expression"
								},
								"daysOffset": {
									"value": "@pipeline().parameters.daysOffset",
									"type": "Expression"
								},
								"dstCatalog": {
									"value": "@pipeline().parameters.dtCatalog",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ep_bronze_mdm_product",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "bronze_mdm_product",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dstContainer": {
									"value": "@pipeline().parameters.dtContainer",
									"type": "Expression"
								},
								"dt": {
									"value": "@pipeline().parameters.dt",
									"type": "Expression"
								},
								"daysOffset": {
									"value": "@pipeline().parameters.daysOffset",
									"type": "Expression"
								},
								"dstCatalog": {
									"value": "@pipeline().parameters.dtCatalog",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dtContainer": {
						"type": "string",
						"defaultValue": "demo"
					},
					"dtCatalog": {
						"type": "string",
						"defaultValue": "project_catalog"
					},
					"dt": {
						"type": "string",
						"defaultValue": "2025-01-01"
					},
					"daysOffset": {
						"type": "string",
						"defaultValue": "-1000"
					}
				},
				"folder": {
					"name": "retail/bronze/mdm"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}
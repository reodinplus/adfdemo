{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-sw-cd"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"adfdemo_a_sql_src_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'adfdemo_a_sql_src'"
		},
		"adfdemo_asql_src_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'adfdemo_asql_src'"
		},
		"adfdemo_storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'adfdemo_storage'"
		},
		"storage_account_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'storage_account'"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "@{linkedService().keyVaultAccountURL}"
		},
		"adfdemo_rest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.xygeng.cn/one"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/depency demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varVal1",
							"value": {
								"value": "123",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1_copy1",
						"type": "IfCondition",
						"state": "Inactive",
						"onInactiveMarkAs": "Skipped",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1_copy1",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "If Condition1_copy1",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varVal1",
							"value": {
								"value": "'ad'",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1_copy1_copy1",
						"type": "IfCondition",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set variable1_copy1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varVal1",
							"value": {
								"value": "@int('123')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition2",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition3",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Condition2",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1, 1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Set variable3",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "varVal1",
										"value": {
											"value": "@int('2345')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parVal1": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"varVal1": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-11T06:25:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"keyVaultAccountURL": {
						"type": "string",
						"defaultValue": "https://asql-kva-dev.vault.azure.net/"
					}
				},
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdemo_a_sql_src')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('adfdemo_a_sql_src_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdemo_asql_src')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('adfdemo_asql_src_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdemo_rest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('adfdemo_rest_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdemo_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('adfdemo_storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage_account')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"storageAccountName": {
						"type": "string",
						"defaultValue": "storageswcd"
					}
				},
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('storage_account_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TutorialIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobDateset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage_account",
					"type": "LinkedServiceReference",
					"parameters": {
						"storageAccountName": "storageswcd"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_re3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfdemo_a_sql_src",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Order"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfdemo_a_sql_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_re3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "demo/ssiswork/订单数据",
						"container": "file-data"
					},
					"firstRowAsHeader": false
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdemo_asql_dataset_src_adfdemo_object')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfdemo_asql_src",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adfdemo"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "object_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "principal_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "schema_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "parent_object_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "type",
						"type": "char"
					},
					{
						"name": "type_desc",
						"type": "nvarchar"
					},
					{
						"name": "create_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "modify_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "is_ms_shipped",
						"type": "bit"
					},
					{
						"name": "is_published",
						"type": "bit"
					},
					{
						"name": "is_schema_published",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "src_adfdemo_object"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfdemo_asql_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdemo_asql_dataset_src_adfdemo_object1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfdemo_asql_src",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adfdemo"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "object_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "principal_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "schema_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "parent_object_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "type",
						"type": "char"
					},
					{
						"name": "type_desc",
						"type": "nvarchar"
					},
					{
						"name": "create_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "modify_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "is_ms_shipped",
						"type": "bit"
					},
					{
						"name": "is_published",
						"type": "bit"
					},
					{
						"name": "is_schema_published",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "src_adfdemo_object"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfdemo_asql_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdemo_asql_dataset_src_adfdemo_object2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfdemo_asql_src",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adfdemo"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "object_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "principal_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "schema_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "parent_object_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "type",
						"type": "char"
					},
					{
						"name": "type_desc",
						"type": "nvarchar"
					},
					{
						"name": "create_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "modify_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "is_ms_shipped",
						"type": "bit"
					},
					{
						"name": "is_published",
						"type": "bit"
					},
					{
						"name": "is_schema_published",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "src_adfdemo_object"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfdemo_asql_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdemo_asql_ds_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfdemo_asql_src",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "adfdemo"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfdemo_asql_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdemo_blob_dataset_excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfdemo_storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adfdemo"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Employee Demo.xlsx",
						"container": "adfdemo"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "FirsrtName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfdemo_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdemo_rest_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adfdemo_rest",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adfdemo"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adfdemo_rest')]"
			]
		}
	]
}
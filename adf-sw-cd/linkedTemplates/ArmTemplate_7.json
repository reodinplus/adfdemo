{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-sw-cd"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/TTL_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web_Get AcceccTokenObj",
						"type": "WebActivity",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=@{variables('corpid')}&corpsecret=@{variables('corpsecret')}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SVar_Set Var accecc_token",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Web_Get AcceccTokenObj",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "access_token",
							"value": {
								"value": "@activity('Web_Get AcceccTokenObj').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "SVar_Set Var accecc_token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['errcode']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "$['errmsg']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['department'][0]"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['position']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['mobile']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['gender']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['email']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['avatar']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['enable']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['isleader']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['extattr']['attrs'][0]['name']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['extattr']['attrs'][0]['value']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['extattr']['attrs'][0]['type']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['extattr']['attrs'][0]['text']['value']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['hide_mobile']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['english_name']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['telephone']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['order'][0]"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['main_department']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['qr_code']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['alias']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['is_leader_in_dept'][0]"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['thumb_avatar']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['biz_mail']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['userid']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['direct_leader'][0]"
										},
										"sink": {}
									}
								],
								"collectionReference": "$['userlist']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_QYWeChat",
								"type": "DatasetReference",
								"parameters": {
									"RelativeURL": {
										"value": "user/list?access_token=@{variables('access_token')}&department_id=1&fetch_child=1&status=0",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"requestBody": {
										"value": "corpid=@{variables('corpid')}&corpsecret=@{variables('corpsecret')}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_HTTP_QYWeChat_Login",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "access_token",
							"value": {
								"value": "@activity('Lookup1').output.firstRow.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "LS_WEB_QYWeChat_Login",
							"type": "LinkedServiceReference",
							"parameters": {
								"corpid": {
									"value": "@variables('corpid')",
									"type": "Expression"
								},
								"corpsecret": {
									"value": "@variables('corpsecret')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Copy data1_copy1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['errcode']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "$['errmsg']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['department'][0]"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['position']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['mobile']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['gender']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['email']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['avatar']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['enable']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['isleader']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['extattr']['attrs'][0]['name']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['extattr']['attrs'][0]['value']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['extattr']['attrs'][0]['type']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['extattr']['attrs'][0]['text']['value']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['hide_mobile']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['english_name']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['telephone']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['order'][0]"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['main_department']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['qr_code']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['alias']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['is_leader_in_dept'][0]"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['thumb_avatar']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['biz_mail']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['userid']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['direct_leader'][0]"
										},
										"sink": {}
									}
								],
								"collectionReference": "$['userlist']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_QYWeChat",
								"type": "DatasetReference",
								"parameters": {
									"RelativeURL": {
										"value": "user/list?access_token=@{variables('access_token')}&department_id=1&fetch_child=1&status=0",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"corpid": {
						"type": "String",
						"defaultValue": "ww6756f2ce4a5f10ff"
					},
					"corpsecret": {
						"type": "String",
						"defaultValue": "VcCpyk0srxuJosFusMfA_mfGzJNrNsdLTPPuqbJ61s0"
					},
					"access_token": {
						"type": "String",
						"defaultValue": "jhAT-nUmGL0F2MDjHOQh7V5oCb9R2lqdUmSy_RnNzjzSQPkYK5OrVNPh_3bZcl3FskfGz5uLF4KNcN5uHFfAEzqo_jbgBN1S7d85Ia0rHZCBg9AMeEx5yYt0z1pFrvDgkjY29EV3JYGSinPXt6zb30-AduxqU8AaVs6jKQBVdz81GnuLWF2jxl_5kNmrUFjS2ZQBTrgnsSvJ8rlADMUvZQ"
					}
				},
				"folder": {
					"name": "QyWeChat"
				},
				"annotations": [],
				"lastPublishTime": "2025-09-02T10:00:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_excel_to_asql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "file-data/adfdemo/Employee Demo.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.EmployeeDemo"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "FilePath",
										"value": "$$FILEPATH"
									},
									{
										"name": "FileName",
										"value": "$$FILENAME"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirsrtName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "storge_excel_customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_employeedemo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2025-09-02T10:00:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_mssql_asql_employee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "mssql_adfemo_employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-14T04:07:59Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/aishu_excel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"requestTimeout": "0.00:10:00"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "pbi_xuqiu_ds_excel",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/asql_to_asql_stg_adfdemo_object')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.src_adfdemo_object"
							},
							{
								"name": "Destination",
								"value": "dbo.stg_adfdemo_object"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "object_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "object_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "principal_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "principal_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "schema_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "schema_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "parent_object_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "parent_object_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "type",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "type_desc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "type_desc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "create_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "create_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "modify_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "modify_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "is_ms_shipped",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_ms_shipped",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "is_published",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_published",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "is_schema_published",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_schema_published",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adfdemo_asql_dataset_src_adfdemo_object",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_dataset_stg_adfdemo_object",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFDemo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-21T03:02:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/asql_to_asql_stg_adfdemo_object1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.src_adfdemo_object"
							},
							{
								"name": "Destination",
								"value": "dbo.stg_adfdemo_object"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "object_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "object_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "principal_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "principal_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "schema_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "schema_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "parent_object_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "parent_object_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "type",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "type_desc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "type_desc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "create_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "create_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "modify_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "modify_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "is_ms_shipped",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_ms_shipped",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "is_published",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_published",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "is_schema_published",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_schema_published",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adfdemo_asql_dataset_src_adfdemo_object1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_dataset_stg_adfdemo_object1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFDemo"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T07:01:23Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/asql_to_asql_stg_adfdemo_object2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.src_adfdemo_object"
							},
							{
								"name": "Destination",
								"value": "dbo.stg_adfdemo_object"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "object_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "object_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "principal_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "principal_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "schema_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "schema_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "parent_object_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "parent_object_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "type",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "type_desc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "type_desc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "create_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "create_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "modify_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "modify_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "is_ms_shipped",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_ms_shipped",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "is_published",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_published",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "is_schema_published",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "is_schema_published",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adfdemo_asql_dataset_src_adfdemo_object2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_dataset_stg_adfdemo_object2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFDemo"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-24T07:14:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_excel_to_asql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adfdemo//Employee Demo.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.EmployeeDemo"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirsrtName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adfdemo_blob_dataset_excel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFDemo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-21T02:43:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_excel_to_asql_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adfdemo//Employee Demo.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.EmployeeDemo"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "FIleName",
										"value": "$$FILENAME"
									},
									{
										"name": "FilePath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FilePath",
											"type": "String"
										},
										"sink": {
											"name": "file_path",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FIleName",
											"type": "String"
										},
										"sink": {
											"name": "file_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProdunctId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Qty",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qty",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "unit_price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "SubTotal",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "subtotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adfdemo_storage_ds_plat",
								"type": "DatasetReference",
								"parameters": {
									"container": "adfdemo",
									"directory": "employee",
									"file": " "
								}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_ds",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "project_sales"
								}
							}
						]
					},
					{
						"name": "Copy data1_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adfdemo//Employee Demo.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.EmployeeDemo"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "storage_binary",
								"type": "DatasetReference",
								"parameters": {
									"contrainerName": "adfdemo",
									"directoryName": "employee",
									"fileName": " "
								}
							}
						],
						"outputs": [
							{
								"referenceName": "storage_binary",
								"type": "DatasetReference",
								"parameters": {
									"contrainerName": "adfdemo",
									"directoryName": "employee2",
									"fileName": " "
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFDemo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-21T02:43:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobstorage_excel_column_duplicated')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "FileName",
										"value": "$$FILENAME"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FileName",
											"type": "String"
										},
										"sink": {
											"name": "file_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProdunctId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Qty",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qty",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "unit_price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "SubTotal",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "subtotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Qty",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qty2",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blobstorage_ds_excel",
								"type": "DatasetReference",
								"parameters": {
									"container": "file-data",
									"directory": "demo/sales",
									"file": "Sales_2021.xlsx",
									"sheet": "Sheet1",
									"range": "A1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_ds",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "stg_sales"
								}
							}
						]
					},
					{
						"name": "Copy data1_copy1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {},
										"sink": {
											"name": "insert_dt",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {},
										"sink": {
											"name": "update_dt",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {},
										"sink": {
											"name": "file_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {},
										"sink": {
											"name": "file_last_modifty_time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {},
										"sink": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Qty",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qty",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {},
										"sink": {
											"name": "unit_price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "SubTotal",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "subtotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blobstorage_ds_excel",
								"type": "DatasetReference",
								"parameters": {
									"container": "file-data",
									"directory": "demo/sales",
									"file": "Sales_Demo_2022.xlsx",
									"sheet": "Sheet1",
									"range": "A3:E9999"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_ds",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "stg_sales"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_blob_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ep_bronze_blob_retail_transaction",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "bronze_blob_retail_transaction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								},
								"dstContainer": {
									"value": "@pipeline().parameters.dstContainer",
									"type": "Expression"
								},
								"dt": {
									"value": "@pipeline().parameters.dt",
									"type": "Expression"
								},
								"daysOffset": {
									"value": "@pipeline().parameters.daysOffset",
									"type": "Expression"
								},
								"dstCatalog": {
									"value": "@pipeline().parameters.dstCatalog",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "file-data"
					},
					"dstContainer": {
						"type": "string",
						"defaultValue": "demo"
					},
					"dstCatalog": {
						"type": "string",
						"defaultValue": "project_catalog"
					},
					"dt": {
						"type": "string",
						"defaultValue": "2025-01-01"
					},
					"daysOffset": {
						"type": "int",
						"defaultValue": -1000
					}
				},
				"folder": {
					"name": "retail/bronze/blob"
				},
				"annotations": [],
				"lastPublishTime": "2025-09-02T10:00:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/control flow demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter1",
						"type": "Filter",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.ARR",
								"type": "Expression"
							},
							"condition": {
								"value": "@greater(item(), 3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "varValue",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach1_copy1",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.ARR",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Set variable1_copy1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "varValue",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Switch1",
						"type": "Switch",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"cases": [
								{
									"value": "Case1"
								}
							]
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0, 2)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "loop_value",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select top (10) object_id, name from sys.objects;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "asql_dataset",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": " ",
									"tableName": " "
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ARR": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5
						]
					}
				},
				"variables": {
					"varValue": {
						"type": "Integer"
					},
					"loop_value": {
						"type": "Integer"
					},
					"animal": {
						"type": "String"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-15T06:28:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/control_activity_common')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "name",
							"value": {
								"value": "@concat('Baba', '''s', ' store')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "msql_demo_dataset",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": {
										"value": "@pipeline().parameters.schemaName",
										"type": "Expression"
									},
									"tableName": {
										"value": "@pipeline().parameters.tableName",
										"type": "Expression"
									},
									"dbName": {
										"value": "@pipeline().parameters.dbName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter Para animalsArray",
						"type": "Filter",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.animalsArray",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item(), 'Dog')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter Parameter numsArray",
						"type": "Filter",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.numsArray",
								"type": "Expression"
							},
							"condition": {
								"value": "@greater(item(), 3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter Parameter itemsArray",
						"type": "Filter",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.itemsArray",
								"type": "Expression"
							},
							"condition": {
								"value": "@greater(int(item().value), 5)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Filter Parameter numsArray",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Parameter numsArray').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "animal",
										"value": {
											"value": "@string(item())",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "dbo.usp_objects_get",
								"storedProcedureParameters": {
									"type": {
										"type": "String",
										"value": "P"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "msql_demo_dataset",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": {
										"value": "@pipeline().parameters.schemaName",
										"type": "Expression"
									},
									"tableName": {
										"value": "@pipeline().parameters.tableName",
										"type": "Expression"
									},
									"dbName": {
										"value": "@pipeline().parameters.dbName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.routeSelected, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set variable4",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "name",
										"value": "N"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variable3",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "name",
										"value": "Y"
									}
								}
							]
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Set variable5",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "name",
							"value": "234"
						}
					},
					{
						"name": "Switch1",
						"type": "Switch",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@variables('route')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "A",
									"activities": [
										{
											"name": "Set variable6",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "name",
												"value": "1"
											}
										}
									]
								},
								{
									"value": "B",
									"activities": [
										{
											"name": "Set variable8",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "name",
												"value": "2"
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Set variable7",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "name",
										"value": "0"
									}
								}
							]
						}
					},
					{
						"name": "clean table",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[p_truncate_table]",
							"storedProcedureParameters": {
								"tableNameWithSchema": {
									"value": "dbo.employee",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "mssql_adfdemo",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "name",
								"value": "123"
							}
						],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_objects_get]",
							"storedProcedureParameters": {
								"type": {
									"value": "U",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "mssql_demo",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "TestDataSource"
							}
						}
					},
					{
						"name": "Append variable1",
						"type": "AppendVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "animalsArray",
							"value": "1235"
						}
					},
					{
						"name": "Append variable2",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Append variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "animalsArray",
							"value": "254"
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Append variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('animalsArray')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable9",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "name",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dbName": {
						"type": "string",
						"defaultValue": "TestDataSource"
					},
					"schemaName": {
						"type": "string",
						"defaultValue": "sys"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "objects"
					},
					"animalsArray": {
						"type": "array",
						"defaultValue": [
							"Dog",
							"Cat",
							"Bear",
							"Bird"
						]
					},
					"numsArray": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5,
							6
						]
					},
					"itemsArray": {
						"type": "array",
						"defaultValue": [
							{
								"name": "name1",
								"value": "1"
							},
							{
								"name": "name2",
								"value": "2"
							},
							{
								"name": "name3",
								"value": "3"
							}
						]
					},
					"routeSelected": {
						"type": "string",
						"defaultValue": "Y"
					}
				},
				"variables": {
					"name": {
						"type": "String",
						"defaultValue": "12356"
					},
					"animal": {
						"type": "String"
					},
					"allDependSuccess": {
						"type": "Boolean",
						"defaultValue": false
					},
					"route": {
						"type": "String",
						"defaultValue": "B"
					},
					"animalsArray": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "ADFDemo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-23T04:49:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/control_filter_https-api-xygeng-cn')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "https://api.xygeng.cn/one",
				"activities": [
					{
						"name": "Filter Parameter animalsArray",
						"type": "Filter",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.animalsArray",
								"type": "Expression"
							},
							"condition": {
								"value": "@not(equals(item(), 'Bear'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter Parameter numsArray",
						"type": "Filter",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.numsArray",
								"type": "Expression"
							},
							"condition": {
								"value": "@greaterOrEquals(item(), 3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter Paramter itemsArray",
						"type": "Filter",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.itemsArray",
								"type": "Expression"
							},
							"condition": {
								"value": "@greaterOrEquals(int(item().value), 3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.animalsArray",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "animal",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    utcNow(variables('srcInsertDate')), \n    utcNow(variables('dstInsertDate'))\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "srcHasData",
										"value": {
											"value": "@bool(1)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "animal",
							"value": "145"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.restRelativeURL}"
							},
							{
								"name": "Destination",
								"value": "@{'dbo'}.@{'adfdemo_rest_one'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['category']"
										},
										"sink": {
											"name": "category",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['difficulty']"
										},
										"sink": {
											"name": "difficulty",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['question']"
										},
										"sink": {
											"name": "question",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['correct_answer']"
										},
										"sink": {
											"name": "correct_answer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['incorrect_answers']"
										},
										"sink": {
											"name": "incorrect_answers",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['results']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {
									"relativeURL": {
										"value": "@pipeline().parameters.restRelativeURL",
										"type": "Expression"
									},
									"baseURL": {
										"value": "@pipeline().parameters.restBaseURL",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dataset",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dbo",
									"tableName": "adfdemo_rest_one"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"animalsArray": {
						"type": "array",
						"defaultValue": [
							"Dog",
							"Cat",
							"Bear",
							"Bird"
						]
					},
					"numsArray": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5,
							6
						]
					},
					"itemsArray": {
						"type": "array",
						"defaultValue": [
							{
								"name": "name1",
								"value": "1"
							},
							{
								"name": "name2",
								"value": "2"
							},
							{
								"name": "name3",
								"value": "3"
							}
						]
					},
					"restBaseURL": {
						"type": "string",
						"defaultValue": "https://api.xygeng.cn"
					},
					"restRelativeURL": {
						"type": "string",
						"defaultValue": "one"
					}
				},
				"variables": {
					"animal": {
						"type": "String"
					},
					"srcInsertDate": {
						"type": "String",
						"defaultValue": "2020-12-30"
					},
					"dstInsertDate": {
						"type": "String",
						"defaultValue": "2020-12-29"
					},
					"srcHasData": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-22T07:52:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/control_filter_rest_https_opentdb_com')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "https://opentdb.com/api.php?amount=10&category=23&difficulty=easy&type=multiple",
				"activities": [
					{
						"name": "Filter Parameter animalsArray",
						"type": "Filter",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.animalsArray",
								"type": "Expression"
							},
							"condition": {
								"value": "@not(equals(item(), 'Bear'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter Parameter numsArray",
						"type": "Filter",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.numsArray",
								"type": "Expression"
							},
							"condition": {
								"value": "@greaterOrEquals(item(), 3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter Paramter itemsArray",
						"type": "Filter",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.itemsArray",
								"type": "Expression"
							},
							"condition": {
								"value": "@greaterOrEquals(int(item().value), 3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.animalsArray",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "animal",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    utcNow(variables('srcInsertDate')), \n    utcNow(variables('dstInsertDate'))\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "srcHasData",
										"value": {
											"value": "@bool(1)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "animal",
							"value": "145"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.restRelativeURL}"
							},
							{
								"name": "Destination",
								"value": "@{'dbo'}.@{'adfdemo_rest_one'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['category']"
										},
										"sink": {
											"name": "category",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['difficulty']"
										},
										"sink": {
											"name": "difficulty",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['question']"
										},
										"sink": {
											"name": "question",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['correct_answer']"
										},
										"sink": {
											"name": "correct_answer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['incorrect_answers']"
										},
										"sink": {
											"name": "incorrect_answers",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['results']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {
									"relativeURL": {
										"value": "@pipeline().parameters.restRelativeURL",
										"type": "Expression"
									},
									"baseURL": {
										"value": "@pipeline().parameters.restBaseURL",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dataset",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "dbo",
									"tableName": "adfdemo_rest_two"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"animalsArray": {
						"type": "array",
						"defaultValue": [
							"Dog",
							"Cat",
							"Bear",
							"Bird"
						]
					},
					"numsArray": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5,
							6
						]
					},
					"itemsArray": {
						"type": "array",
						"defaultValue": [
							{
								"name": "name1",
								"value": "1"
							},
							{
								"name": "name2",
								"value": "2"
							},
							{
								"name": "name3",
								"value": "3"
							}
						]
					},
					"restBaseURL": {
						"type": "string",
						"defaultValue": "https://opentdb.com/"
					},
					"restRelativeURL": {
						"type": "string",
						"defaultValue": "api.php?amount=10&category=23&difficulty=easy&type=multiple"
					}
				},
				"variables": {
					"animal": {
						"type": "String"
					},
					"srcInsertDate": {
						"type": "String",
						"defaultValue": "2020-12-30"
					},
					"dstInsertDate": {
						"type": "String",
						"defaultValue": "2020-12-29"
					},
					"srcHasData": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-22T07:52:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/control_getmetadate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "adfdemo_asql_employee",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists",
								"columnCount",
								"structure"
							]
						}
					},
					{
						"name": "Get Metadata1_copy1",
						"type": "GetMetadata",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "storge_excel_customer",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"contentMD5",
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"size",
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Get Metadata2",
						"type": "GetMetadata",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "storage_excel_src",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "file-data",
									"directoryName": "demo/demofile",
									"fileName": " ",
									"sheetName": " "
								}
							},
							"fieldList": [
								"childItems",
								"itemName",
								"itemType",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals('Failed', coalesce(body('MyUnauthenticatedActivity')?.status, actions('MyUnauthenticatedActivity')?.status, 'null'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "MyUnauthenticatedActivity",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "MyWaitActivity",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"Content-Type": "application/json"
										},
										"url": "https://www.fake.com/"
									}
								},
								{
									"name": "MyWaitActivity",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Switch1",
						"type": "Switch",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "3",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Case1"
								},
								{
									"value": "Case2"
								},
								{
									"value": "Case3"
								}
							],
							"defaultActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "storage_binary",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {},
						"linkedServiceName": {
							"referenceName": "sqldb_dw",
							"type": "LinkedServiceReference",
							"parameters": {
								"dbName": "sqldevswcd",
								"dbUserName": "sqladminuser01",
								"dbUserPwd": "1qaz!QAZ",
								"dbServerName": "sqlserverdevswcd.database.windows.net"
							}
						}
					},
					{
						"name": "Append variable1",
						"type": "AppendVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "animalsArray",
							"value": {
								"value": "Cat",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "name",
							"value": {
								"value": "123",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Append variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('animalsArray')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "name",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"headers": {}
						}
					},
					{
						"name": "WebHook1",
						"type": "WebHook",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"timeout": "00:10:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"inputPath": {
						"type": "string",
						"defaultValue": "file-data/demo/demofile"
					},
					"outputPath1": {
						"type": "string",
						"defaultValue": "file-data/demo/demofileoutput1"
					},
					"outputPath2": {
						"type": "string",
						"defaultValue": "file-data/demo/demofileoutput2"
					},
					"outputPath3": {
						"type": "string",
						"defaultValue": "file-data/demo/demofileoutput2"
					},
					"routeSelect": {
						"type": "string",
						"defaultValue": "1"
					}
				},
				"variables": {
					"name": {
						"type": "String"
					},
					"animalsArray": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-18T09:40:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy data loop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select \n\tt1.src, t1.stg\nfrom (values \n\t(N'dbo.src_demo_product', N'dbo.stg_demo_product'),\n\t(N'dbo.src_demo_customer', N'dbo.stg_demo_customer')\n) t1 (src, stg)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azuresql_dst",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": " "
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azuresql_dst",
											"type": "DatasetReference",
											"parameters": {
												"tableNameWithSchema": {
													"value": "@item().src",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azuresql_dst",
											"type": "DatasetReference",
											"parameters": {
												"tableNameWithSchema": {
													"value": "@item().stg",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-14T10:24:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_data_from_dir')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data_listfile",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "filesystem_ds_excel",
								"type": "DatasetReference",
								"parameters": {
									"directory": "00Project_Data_Source/02SSISWork/ProjectSource/订单数据/Sample",
									"file": " ",
									"sheet": "Sheet1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azuresql_dst",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": "dbo.order"
								}
							}
						]
					},
					{
						"name": "Copy data1_copy_filepath",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"fileFilter": "*.xlsx"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "filesystem_ds_excel",
								"type": "DatasetReference",
								"parameters": {
									"directory": "00Project_Data_Source/02SSISWork/ProjectSource/订单数据/Sample",
									"file": " ",
									"sheet": "Sheet1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azuresql_dst",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": "dbo.order"
								}
							}
						]
					},
					{
						"name": "Copy data1_copy_filepathindataset",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "filesystem_ds_excel",
								"type": "DatasetReference",
								"parameters": {
									"directory": "00Project_Data_Source/02SSISWork/ProjectSource/订单数据/Sample",
									"file": " ",
									"sheet": "Sheet1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azuresql_dst",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": "dbo.order"
								}
							}
						]
					},
					{
						"name": "Copy data_wildcardfilepath_copy1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFolderPath": "00Project_Data_Source/02SSISWork/ProjectSource/订单数据/Sample",
									"wildcardFileName": "*.xlsx",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "filesystem_ds_excel",
								"type": "DatasetReference",
								"parameters": {
									"directory": "00Project_Data_Source/02SSISWork/ProjectSource/订单数据/Sample",
									"file": " ",
									"sheet": "Sheet1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azuresql_dst",
								"type": "DatasetReference",
								"parameters": {
									"tableNameWithSchema": "dbo.order"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cummin_restapi_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "@{'dbo'}.@{'cummins_order'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": "{\n    \"QueryFromDate\": \"2022-09-11\",\n    \"QueryEndDate\": \"2023-01-11\"\n}",
								"additionalHeaders": {
									"Secret": "1e42bb78e138f1dadb925c8bc70462fb"
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['SQJSNo']"
										},
										"sink": {
											"name": "SQJSNo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['OrderNo']"
										},
										"sink": {
											"name": "OrderNo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['OrderCount']"
										},
										"sink": {
											"name": "OrderCount",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['KAM']"
										},
										"sink": {
											"name": "KAM",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ItemSONo']"
										},
										"sink": {
											"name": "ItemSONo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Createddate']"
										},
										"sink": {
											"name": "Createddate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ContractNo']"
										},
										"sink": {
											"name": "ContractNo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ClientCode']"
										},
										"sink": {
											"name": "ClientCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['AccountName']"
										},
										"sink": {
											"name": "AccountName",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['responseData']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "cummins_restapi_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdemo_asql_ds",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "cummins_order"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-20T03:19:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_call_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "data flow  select",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_select",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink2": {},
									"sink1": {}
								},
								"linkedServiceParameters": {
									"source1": {
										"linkedService": {
											"dbName": "sqldevswcd",
											"dbUserName": "sqladminuser01",
											"dbUserPwd": "1qaz!QAZ",
											"dbServerName": "sqlserverdevswcd.database.windows.net"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow1_copy1",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_select",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink2": {},
									"sink1": {}
								},
								"linkedServiceParameters": {
									"source1": {
										"linkedService": {
											"dbName": "sqldevswcd",
											"dbUserName": "sqladminuser01",
											"dbUserPwd": "1qaz!QAZ",
											"dbServerName": "sqlserverdevswcd.database.windows.net"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-27T02:13:32Z"
			},
			"dependsOn": []
		}
	]
}
{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-sw-cd"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/asql_src_object')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqldb_dw",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "sqldevswcd",
						"dbUserName": "sqladminuser01",
						"dbUserPwd": "1qaz!QAZ",
						"dbServerName": "sqlserverdevswcd.database.windows.net"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "object_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "principal_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "schema_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "parent_object_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "type",
						"type": "char"
					},
					{
						"name": "type_desc",
						"type": "nvarchar"
					},
					{
						"name": "create_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "modify_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "is_ms_shipped",
						"type": "bit"
					},
					{
						"name": "is_published",
						"type": "bit"
					},
					{
						"name": "is_schema_published",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "src_object"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/asql_stg_object')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqldb_dw",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "sqldevswcd",
						"dbUserName": "sqladminuser01",
						"dbUserPwd": "1qaz!QAZ",
						"dbServerName": "sqlserverdevswcd.database.windows.net"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "object_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "principal_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "schema_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "parent_object_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "type",
						"type": "char"
					},
					{
						"name": "type_desc",
						"type": "nvarchar"
					},
					{
						"name": "create_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "modify_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "is_ms_shipped",
						"type": "bit"
					},
					{
						"name": "is_published",
						"type": "bit"
					},
					{
						"name": "is_schema_published",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_object"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuresql_dst')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqldb_dw",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "sqldevswcd",
						"dbUserName": "sqladminuser01",
						"dbUserPwd": "1qaz!QAZ",
						"dbServerName": "sqlserverdevswcd.database.windows.net"
					}
				},
				"parameters": {
					"tableNameWithSchema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "insert_dt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "update_dt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "file_name",
						"type": "nvarchar"
					},
					{
						"name": "file_last_modifty_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "product_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "qty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "unit_price",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "subtotal",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@first(array(split(dataset().tableNameWithSchema, '.')))",
						"type": "Expression"
					},
					"table": {
						"value": "@last(array(split(dataset().tableNameWithSchema, '.')))",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuresql_dst1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqldb_dw",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "sqldevswcd",
						"dbUserName": "sqladminuser01",
						"dbUserPwd": "1qaz!QAZ",
						"dbServerName": "sqlserverdevswcd.database.windows.net"
					}
				},
				"parameters": {
					"tableNameWithSchema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "insert_dt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "update_dt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "file_name",
						"type": "nvarchar"
					},
					{
						"name": "file_last_modifty_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "product_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "qty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "unit_price",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "subtotal",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@first(array(split(dataset().tableNameWithSchema, '.')))",
						"type": "Expression"
					},
					"table": {
						"value": "@last(array(split(dataset().tableNameWithSchema, '.')))",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cummins_restapi_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/filesystem_ds_excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "fs_offline",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string"
					},
					"file": {
						"type": "string"
					},
					"sheet": {
						"type": "string"
					}
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().sheet",
						"type": "Expression"
					},
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						}
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/msql_demo_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mssql_demo",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": {
							"value": "@dataset().dbName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"schemaName": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "b"
					},
					"dbName": {
						"type": "string",
						"defaultValue": "TestDataSource"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mssql_adfemo_employee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mssql_adfdemo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employee"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pbi_xuqiu_ds_excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "http_aishu_site",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "demo"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/#/preview/customdoc/信息化体系库/信息化项目/BI项目/BI项目实施/BI项目组成员通讯录@20231016.xlsx"
					},
					"sheetIndex": 1,
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     srcTableNameWithSchema as string ('dbo.src_object'),",
						"     dstTableNameWithSchema as string ('dbo.stg_object')",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: (split($srcTableNameWithSchema, '.')[1]),",
						"     tableName: (split($srcTableNameWithSchema, '.')[2]),",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
						"source1 derive(flle_name = 123) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     input(",
						"          name as string,",
						"          object_id as integer,",
						"          principal_id as integer,",
						"          schema_id as integer,",
						"          parent_object_id as integer,",
						"          type as string,",
						"          type_desc as string,",
						"          create_date as timestamp,",
						"          modify_date as timestamp,",
						"          is_ms_shipped as boolean,",
						"          is_published as boolean,",
						"          is_schema_published as boolean",
						"     ),",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: (split($dstTableNameWithSchema, '.')[1]),",
						"     tableName: (split($dstTableNameWithSchema, '.')[2]),",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     srcTableSQL as string ('select name, object_id,principal_id,schema_id,parent_object_id,type,type_desc,create_date,modify_date,is_ms_shipped,is_published,is_schema_published from dbo.src_object where modify_date>\\'1900-01-01\\''),",
						"     dstTableNameWithSchema as string ('dbo.stg_object')",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'sqlserver',",
						"     query: ($srcTableSQL),",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
						"source1 derive(file_name = 123) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     input(",
						"          name as string,",
						"          object_id as integer,",
						"          principal_id as integer,",
						"          schema_id as integer,",
						"          parent_object_id as integer,",
						"          type as string,",
						"          type_desc as string,",
						"          create_date as timestamp,",
						"          modify_date as timestamp,",
						"          is_ms_shipped as boolean,",
						"          is_published as boolean,",
						"          is_schema_published as boolean",
						"     ),",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: (split($dstTableNameWithSchema, '.')[1]),",
						"     tableName: (split($dstTableNameWithSchema, '.')[2]),",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_aggregate')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          name as string,",
						"          object_id as integer,",
						"          principal_id as integer,",
						"          schema_id as integer,",
						"          parent_object_id as integer,",
						"          type as string,",
						"          type_desc as string,",
						"          create_date as timestamp,",
						"          modify_date as timestamp,",
						"          is_ms_shipped as boolean,",
						"          is_published as boolean,",
						"          is_schema_published as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'src_object',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
						"source1 aggregate(cnt = count(object_id),",
						"          each(patternMatch(`(name)` , type=='string'), $$ = count(object_id)),",
						"          each(match(in(['type','type_desc'],name)), $$ = first($$))) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'stg_object',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_conditionalsplit')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "splitByTypeDesc"
						}
					],
					"scriptLines": [
						"source(output(",
						"          name as string,",
						"          object_id as integer,",
						"          principal_id as integer,",
						"          schema_id as integer,",
						"          parent_object_id as integer,",
						"          type as string,",
						"          type_desc as string,",
						"          create_date as timestamp,",
						"          modify_date as timestamp,",
						"          is_ms_shipped as boolean,",
						"          is_published as boolean,",
						"          is_schema_published as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'src_object',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
						"source1 split(type_desc == 'USER_TABLE' || type_desc == 'VIEW',",
						"     type_desc == 'SQL_STORED_PROCEDURE' ||  type_desc == 'SQL_SCALAR_FUNCTION' || type_desc == 'SQL_TABLE_VALUED_FUNCTION' || type == 'SQL_INLINE_TABLE_VALUED_FUNCTION',",
						"     disjoint: false) ~> splitByTypeDesc@(typeIsTableView, typeIsProgramingObject, typeOther)",
						"splitByTypeDesc@typeIsTableView sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'stg_object',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_derivedcolumn')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          name as string,",
						"          object_id as integer,",
						"          principal_id as integer,",
						"          schema_id as integer,",
						"          parent_object_id as integer,",
						"          type as string,",
						"          type_desc as string,",
						"          create_date as timestamp,",
						"          modify_date as timestamp,",
						"          is_ms_shipped as boolean,",
						"          is_published as boolean,",
						"          is_schema_published as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'src_object',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
						"derivedColumn1 filter(type =='P') ~> filter1",
						"source1 derive(column1 = 'a column value',",
						"          each(match(type=='integer'), $$ = $$ + 2),",
						"          each(match(type=='string'), $$ = $$ + 'kk'),",
						"          column2 = 'ldsfds',",
						"          each(match(type=='string'), $$+'short' = $$+'123')) ~> derivedColumn1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'stg_object',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_exists')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						},
						{
							"linkedService": {
								"referenceName": "adfdemo_asql_dst",
								"type": "LinkedServiceReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "exists1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          name as string,",
						"          object_id as integer,",
						"          principal_id as integer,",
						"          schema_id as integer,",
						"          parent_object_id as integer,",
						"          type as string,",
						"          type_desc as string,",
						"          create_date as timestamp,",
						"          modify_date as timestamp,",
						"          is_ms_shipped as boolean,",
						"          is_published as boolean,",
						"          is_schema_published as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'src_object',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
						"source(output(",
						"          name as string,",
						"          object_id as integer,",
						"          principal_id as integer,",
						"          schema_id as integer,",
						"          parent_object_id as integer,",
						"          type as string,",
						"          type_desc as string,",
						"          create_date as timestamp,",
						"          modify_date as timestamp,",
						"          is_ms_shipped as boolean,",
						"          is_published as boolean,",
						"          is_schema_published as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'sqlserver',",
						"     query: 'select * from sys.objects where is_ms_shipped = 0',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source2",
						"source1, source2 exists(source1@name == source2@name,",
						"     negate:true,",
						"     broadcast: 'auto')~> exists1",
						"exists1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'stg_object',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_filter')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          name as string,",
						"          object_id as integer,",
						"          principal_id as integer,",
						"          schema_id as integer,",
						"          parent_object_id as integer,",
						"          type as string,",
						"          type_desc as string,",
						"          create_date as timestamp,",
						"          modify_date as timestamp,",
						"          is_ms_shipped as boolean,",
						"          is_published as boolean,",
						"          is_schema_published as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'src_object',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
						"source1 filter(type_desc == 'SQL_STORED_PROCEDURE' || type_desc == 'USER_TABLE') ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'stg_object',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_join')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						},
						{
							"linkedService": {
								"referenceName": "adfdemo_asql_dst",
								"type": "LinkedServiceReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          name as string,",
						"          object_id as integer,",
						"          principal_id as integer,",
						"          schema_id as integer,",
						"          parent_object_id as integer,",
						"          type as string,",
						"          type_desc as string,",
						"          create_date as timestamp,",
						"          modify_date as timestamp,",
						"          is_ms_shipped as boolean,",
						"          is_published as boolean,",
						"          is_schema_published as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'src_object',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
						"source(output(",
						"          name as string,",
						"          object_id as integer,",
						"          principal_id as integer,",
						"          schema_id as integer,",
						"          parent_object_id as integer,",
						"          type as string,",
						"          type_desc as string,",
						"          create_date as timestamp,",
						"          modify_date as timestamp,",
						"          is_ms_shipped as boolean,",
						"          is_published as boolean,",
						"          is_schema_published as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'sqlserver',",
						"     query: 'select * from sys.objects where is_ms_shipped = 0',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source2",
						"source1, source2 join(fuzzyCompare(source1@name, source2@name, 80.00),",
						"     joinType:'inner',",
						"     matchType:'fuzzy',",
						"     ignoreSpaces: true,",
						"     scoreColumn:'60',",
						"     broadcast: 'off')~> join1",
						"join1 select(mapColumn(",
						"          each(match(instr(name,'source1@')==0))",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'stg_object',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          name,",
						"          object_id,",
						"          principal_id,",
						"          schema_id,",
						"          parent_object_id,",
						"          type,",
						"          type_desc,",
						"          create_date,",
						"          modify_date,",
						"          is_ms_shipped,",
						"          is_published,",
						"          is_schema_published",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_lookup')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						},
						{
							"linkedService": {
								"referenceName": "adfdemo_asql_dst",
								"type": "LinkedServiceReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "lookup1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          name as string,",
						"          object_id as integer,",
						"          principal_id as integer,",
						"          schema_id as integer,",
						"          parent_object_id as integer,",
						"          type as string,",
						"          type_desc as string,",
						"          create_date as timestamp,",
						"          modify_date as timestamp,",
						"          is_ms_shipped as boolean,",
						"          is_published as boolean,",
						"          is_schema_published as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'src_object',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
						"source(output(",
						"          name as string,",
						"          object_key as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'sqlserver',",
						"     query: 'select name, object_id object_key from sys.objects where is_ms_shipped = 0',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source2",
						"lookup1 select(mapColumn(",
						"          each(match(instr(name,'source1@')==0))",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"source1, source2 lookup(source1@name == source2@name,",
						"     multiple: true,",
						"     broadcast: 'auto')~> lookup1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'stg_object',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          name,",
						"          object_id,",
						"          principal_id,",
						"          schema_id,",
						"          parent_object_id,",
						"          type,",
						"          type_desc,",
						"          create_date,",
						"          modify_date,",
						"          is_ms_shipped,",
						"          is_published,",
						"          is_schema_published",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_pivot')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "pivot1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          name as string,",
						"          class as string,",
						"          score as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'sqlserver',",
						"     query: 'select *\\nfrom (values\\n     (N\\'张三\\', N\\'语文\\', 80),\\n     (N\\'张三\\', N\\'数学\\', 89),\\n     (N\\'张三\\', N\\'英语\\', 88),\\n     (N\\'李四\\', N\\'语文\\', 89),\\n     (N\\'李四\\', N\\'数学\\', 90),\\n     (N\\'李四\\', N\\'英语\\', 91)\\n) t1 ([name], class, score)',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
						"source1 pivot(groupBy(name),",
						"     pivotBy(class, ['语文', '数学', '英语', null]),",
						"     sum = sum(score),",
						"     columnNaming: 'a$Nb$Vc',",
						"     lateral: true) ~> pivot1",
						"pivot1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'stg_object',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_pivot2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "pivot1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          type as string,",
						"          cnt as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'sqlserver',",
						"     query: 'select * from (values(N\\'type1\\', 2), (N\\'type2\\', 3)) as t1([type], cnt)',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
						"source1 pivot(pivotBy(type, ['type1', 'type2', 'D', null]),",
						"     {} = sum(cnt),",
						"     columnNaming: '$N$V',",
						"     lateral: true) ~> pivot1",
						"pivot1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'stg_object',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		}
	]
}
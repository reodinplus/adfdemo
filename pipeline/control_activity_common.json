{
	"name": "control_activity_common",
	"properties": {
		"activities": [
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "name",
					"value": {
						"value": "@concat('Baba', '''s', ' store')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "msql_demo_dataset",
						"type": "DatasetReference",
						"parameters": {
							"schemaName": {
								"value": "@pipeline().parameters.schemaName",
								"type": "Expression"
							},
							"tableName": {
								"value": "@pipeline().parameters.tableName",
								"type": "Expression"
							},
							"dbName": {
								"value": "@pipeline().parameters.dbName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Filter Para animalsArray",
				"type": "Filter",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.animalsArray",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item(), 'Dog')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Filter Parameter numsArray",
				"type": "Filter",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.numsArray",
						"type": "Expression"
					},
					"condition": {
						"value": "@greater(item(), 3)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Filter Parameter itemsArray",
				"type": "Filter",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.itemsArray",
						"type": "Expression"
					},
					"condition": {
						"value": "@greater(int(item().value), 5)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Filter Parameter numsArray",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter Parameter numsArray').output.Value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Set variable2",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "animal",
								"value": {
									"value": "@string(item())",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Lookup2",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderStoredProcedureName": "dbo.usp_objects_get",
						"storedProcedureParameters": {
							"type": {
								"type": "String",
								"value": "P"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "msql_demo_dataset",
						"type": "DatasetReference",
						"parameters": {
							"schemaName": {
								"value": "@pipeline().parameters.schemaName",
								"type": "Expression"
							},
							"tableName": {
								"value": "@pipeline().parameters.tableName",
								"type": "Expression"
							},
							"dbName": {
								"value": "@pipeline().parameters.dbName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.routeSelected, 'Y')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set variable4",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "name",
								"value": "N"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set variable3",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "name",
								"value": "Y"
							}
						}
					]
				}
			},
			{
				"name": "Wait1",
				"type": "Wait",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 5
				}
			},
			{
				"name": "Set variable5",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "name",
					"value": "234"
				}
			},
			{
				"name": "Switch1",
				"type": "Switch",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@variables('route')",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "A",
							"activities": [
								{
									"name": "Set variable6",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "name",
										"value": "1"
									}
								}
							]
						},
						{
							"value": "B",
							"activities": [
								{
									"name": "Set variable8",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "name",
										"value": "2"
									}
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "Set variable7",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "name",
								"value": "0"
							}
						}
					]
				}
			},
			{
				"name": "clean table",
				"type": "SqlServerStoredProcedure",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[p_truncate_table]",
					"storedProcedureParameters": {
						"tableNameWithSchema": {
							"value": "dbo.employee",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "mssql_adfdemo",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "name",
						"value": "123"
					}
				],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_objects_get]",
					"storedProcedureParameters": {
						"type": {
							"value": "U",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "mssql_demo",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "TestDataSource"
					}
				}
			},
			{
				"name": "Append variable1",
				"type": "AppendVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "animalsArray",
					"value": "1235"
				}
			},
			{
				"name": "Append variable2",
				"type": "AppendVariable",
				"dependsOn": [
					{
						"activity": "Append variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "animalsArray",
					"value": "254"
				}
			},
			{
				"name": "ForEach2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Append variable2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('animalsArray')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Set variable9",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "name",
								"value": {
									"value": "@item()",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"dbName": {
				"type": "string",
				"defaultValue": "TestDataSource"
			},
			"schemaName": {
				"type": "string",
				"defaultValue": "sys"
			},
			"tableName": {
				"type": "string",
				"defaultValue": "objects"
			},
			"animalsArray": {
				"type": "array",
				"defaultValue": [
					"Dog",
					"Cat",
					"Bear",
					"Bird"
				]
			},
			"numsArray": {
				"type": "array",
				"defaultValue": [
					1,
					2,
					3,
					4,
					5,
					6
				]
			},
			"itemsArray": {
				"type": "array",
				"defaultValue": [
					{
						"name": "name1",
						"value": "1"
					},
					{
						"name": "name2",
						"value": "2"
					},
					{
						"name": "name3",
						"value": "3"
					}
				]
			},
			"routeSelected": {
				"type": "string",
				"defaultValue": "Y"
			}
		},
		"variables": {
			"name": {
				"type": "String",
				"defaultValue": "12356"
			},
			"animal": {
				"type": "String"
			},
			"allDependSuccess": {
				"type": "Boolean",
				"defaultValue": false
			},
			"route": {
				"type": "String",
				"defaultValue": "B"
			},
			"animalsArray": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "ADFDemo"
		},
		"annotations": [],
		"lastPublishTime": "2023-09-23T04:49:11Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
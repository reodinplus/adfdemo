{
	"name": "control_filter_https-api-xygeng-cn",
	"properties": {
		"description": "https://api.xygeng.cn/one",
		"activities": [
			{
				"name": "Filter Parameter animalsArray",
				"type": "Filter",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.animalsArray",
						"type": "Expression"
					},
					"condition": {
						"value": "@not(equals(item(), 'Bear'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Filter Parameter numsArray",
				"type": "Filter",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.numsArray",
						"type": "Expression"
					},
					"condition": {
						"value": "@greaterOrEquals(item(), 3)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Filter Paramter itemsArray",
				"type": "Filter",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.itemsArray",
						"type": "Expression"
					},
					"condition": {
						"value": "@greaterOrEquals(int(item().value), 3)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.animalsArray",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "animal",
								"value": {
									"value": "@item()",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(\n    utcNow(variables('srcInsertDate')), \n    utcNow(variables('dstInsertDate'))\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Set variable2",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "srcHasData",
								"value": {
									"value": "@bool(1)",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Set variable3",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "animal",
					"value": "145"
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "@{pipeline().parameters.restRelativeURL}"
					},
					{
						"name": "Destination",
						"value": "@{'dbo'}.@{'adfdemo_rest_one'}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['category']"
								},
								"sink": {
									"name": "category",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['type']"
								},
								"sink": {
									"name": "type",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['difficulty']"
								},
								"sink": {
									"name": "difficulty",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['question']"
								},
								"sink": {
									"name": "question",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['correct_answer']"
								},
								"sink": {
									"name": "correct_answer",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['incorrect_answers']"
								},
								"sink": {
									"name": "incorrect_answers",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['results']",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "RestResource1",
						"type": "DatasetReference",
						"parameters": {
							"relativeURL": {
								"value": "@pipeline().parameters.restRelativeURL",
								"type": "Expression"
							},
							"baseURL": {
								"value": "@pipeline().parameters.restBaseURL",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "asql_dataset",
						"type": "DatasetReference",
						"parameters": {
							"schemaName": "dbo",
							"tableName": "adfdemo_rest_one"
						}
					}
				]
			}
		],
		"parameters": {
			"animalsArray": {
				"type": "array",
				"defaultValue": [
					"Dog",
					"Cat",
					"Bear",
					"Bird"
				]
			},
			"numsArray": {
				"type": "array",
				"defaultValue": [
					1,
					2,
					3,
					4,
					5,
					6
				]
			},
			"itemsArray": {
				"type": "array",
				"defaultValue": [
					{
						"name": "name1",
						"value": "1"
					},
					{
						"name": "name2",
						"value": "2"
					},
					{
						"name": "name3",
						"value": "3"
					}
				]
			},
			"restBaseURL": {
				"type": "string",
				"defaultValue": "https://api.xygeng.cn"
			},
			"restRelativeURL": {
				"type": "string",
				"defaultValue": "one"
			}
		},
		"variables": {
			"animal": {
				"type": "String"
			},
			"srcInsertDate": {
				"type": "String",
				"defaultValue": "2020-12-30"
			},
			"dstInsertDate": {
				"type": "String",
				"defaultValue": "2020-12-29"
			},
			"srcHasData": {
				"type": "Boolean"
			}
		},
		"folder": {
			"name": "demo"
		},
		"annotations": [],
		"lastPublishTime": "2023-09-22T07:52:01Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
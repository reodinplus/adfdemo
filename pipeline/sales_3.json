{
	"name": "sales_3",
	"properties": {
		"description": "包含完整的文件备份，不增量",
		"activities": [
			{
				"name": "Get Files",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "SP_Truncate Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "storage_excel_src",
						"type": "DatasetReference",
						"parameters": {
							"containerName": {
								"value": "@variables('srcContainerName')",
								"type": "Expression"
							},
							"directoryName": {
								"value": "@variables('srcDirecotryName')",
								"type": "Expression"
							},
							"fileName": " ",
							"sheetName": " "
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "ForEach Files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter Valid Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter Valid Files').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Get File Metadata",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "storage_excel_src",
									"type": "DatasetReference",
									"parameters": {
										"containerName": {
											"value": "@variables('srcContainerName')",
											"type": "Expression"
										},
										"directoryName": {
											"value": "@variables('srcDirecotryName')",
											"type": "Expression"
										},
										"fileName": {
											"value": "@item().name",
											"type": "Expression"
										},
										"sheetName": " "
									}
								},
								"fieldList": [
									"lastModified"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Backup file by copy file",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Extract Source Data To STG",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "storage_binary",
									"type": "DatasetReference",
									"parameters": {
										"contrainerName": {
											"value": "@variables('srcContainerName')",
											"type": "Expression"
										},
										"directoryName": {
											"value": "@variables('srcDirecotryName')",
											"type": "Expression"
										},
										"fileName": "@item().name"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "storage_binary",
									"type": "DatasetReference",
									"parameters": {
										"contrainerName": {
											"value": "@variables('srcContainerName')",
											"type": "Expression"
										},
										"directoryName": {
											"value": "@concat(\n    variables('srcDirecotryName'),\n    if(equals(variables('isSuccess'), 1), '/success', '/failed')\n)",
											"type": "Expression"
										},
										"fileName": {
											"value": "@concat(\n    substring(item().name, 0, indexOf(item().name, variables('srcFileExtendName'))), \n    '_',\n    formatDateTime(addHours(utcNow(), 8), 'yyyyMMddHHmmss'),variables('srcFileExtendName')\n)",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Delete Source File",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Backup file by copy file",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "storage_binary",
									"type": "DatasetReference",
									"parameters": {
										"contrainerName": {
											"value": "@variables('srcContainerName')",
											"type": "Expression"
										},
										"directoryName": {
											"value": "@variables('srcDirecotryName')",
											"type": "Expression"
										},
										"fileName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Extract Source Data To STG",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get File Metadata",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(1,1)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "COPY_Extract Data From File And Load Into STG",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Init isSuccess Success",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "ExcelSource",
												"additionalColumns": [
													{
														"name": "FileName",
														"value": {
															"value": "@item().name",
															"type": "Expression"
														}
													},
													{
														"name": "FileLastModifyDate",
														"value": {
															"value": "@addHours(activity('Get File Metadata').output.lastModified, 8)",
															"type": "Expression"
														}
													}
												],
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": false,
													"enablePartitionDiscovery": false
												}
											},
											"sink": {
												"type": "AzureSqlSink",
												"writeBehavior": "insert",
												"sqlWriterUseTableLock": false,
												"disableMetricsCollection": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"mappings": [
													{
														"source": {
															"name": "FileName",
															"type": "String"
														},
														"sink": {
															"name": "file_name",
															"type": "String",
															"physicalType": "nvarchar"
														}
													},
													{
														"source": {
															"name": "FileLastModifyDate",
															"type": "String"
														},
														"sink": {
															"name": "file_last_modifty_time",
															"type": "DateTime",
															"physicalType": "datetime"
														}
													},
													{
														"source": {
															"name": "ProdunctId",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "product_id",
															"type": "Int32",
															"physicalType": "int"
														}
													},
													{
														"source": {
															"name": "Qty",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "qty",
															"type": "Int32",
															"physicalType": "int"
														}
													},
													{
														"source": {
															"name": "UnitPrice",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "unit_price",
															"type": "Decimal",
															"physicalType": "decimal",
															"scale": 4,
															"precision": 19
														}
													},
													{
														"source": {
															"name": "SubTotal",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "subtotal",
															"type": "Decimal",
															"physicalType": "decimal",
															"scale": 4,
															"precision": 19
														}
													}
												],
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "storage_excel_src",
												"type": "DatasetReference",
												"parameters": {
													"containerName": {
														"value": "@variables('srcContainerName')",
														"type": "Expression"
													},
													"directoryName": {
														"value": "@variables('srcDirecotryName')",
														"type": "Expression"
													},
													"fileName": {
														"value": "@item().name",
														"type": "Expression"
													},
													"sheetName": {
														"value": "@variables('srcSheetName')",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "azuresql_dst",
												"type": "DatasetReference",
												"parameters": {
													"tableNameWithSchema": {
														"value": "@variables('stgTableNameWithSchema')",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Set isSuccess Failed",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "COPY_Extract Data From File And Load Into STG",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "isSuccess",
											"value": 0
										}
									},
									{
										"name": "Init isSuccess Success",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "isSuccess",
											"value": 1
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Filter Valid Files",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Files').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@endswith(item().name, variables('srcFileExtendName'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SP_Truncate Table",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "@variables('truncateProcWithSchema')",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"tableNameWithSchema": {
							"value": {
								"value": "@variables('stgTableNameWithSchema')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "sqldb_dw",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "sqldevswcd",
						"dbUserName": "sqladminuser01",
						"dbUserPwd": "1qaz!QAZ",
						"dbServerName": "sqlserverdevswcd.database.windows.net"
					}
				}
			},
			{
				"name": "SP_Move STG To ODS",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEach Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "@variables('odsProcNameWithSchema')",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@pipeline().parameters.batch_id",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "sqldb_dw",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "sqldevswcd",
						"dbUserName": "sqladminuser01",
						"dbUserPwd": "1qaz!QAZ",
						"dbServerName": "sqlserverdevswcd.database.windows.net"
					}
				}
			}
		],
		"parameters": {
			"batch_id": {
				"type": "int",
				"defaultValue": 0
			}
		},
		"variables": {
			"srcContainerName": {
				"type": "String",
				"defaultValue": "file-data"
			},
			"srcDirecotryName": {
				"type": "String",
				"defaultValue": "demo/sales"
			},
			"srcSheetName": {
				"type": "String",
				"defaultValue": "sheet1"
			},
			"stgTableNameWithSchema": {
				"type": "String",
				"defaultValue": "dbo.stg_sales"
			},
			"odsProcNameWithSchema": {
				"type": "String",
				"defaultValue": "dbo.p_etl_ods_sales"
			},
			"srcFileExtendName": {
				"type": "String",
				"defaultValue": ".xlsx"
			},
			"truncateProcWithSchema": {
				"type": "String",
				"defaultValue": "dbo.p_truncate_table"
			},
			"isSuccess": {
				"type": "Integer"
			}
		},
		"folder": {
			"name": "demo"
		},
		"annotations": [],
		"lastPublishTime": "2023-08-24T02:37:05Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
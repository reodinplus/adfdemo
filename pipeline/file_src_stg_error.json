{
	"name": "file_src_stg_error",
	"properties": {
		"description": "foreach容器不能嵌套foreach容器",
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select *\nfrom (values\n\t(N'file-data', N'demo/ssiswork/地点数据', N'Sheet1', N'dbo.City'),\n\t(N'file-data', N'demo/ssiswork/产品数据', N'Sheet1', N'dbo.Product'),\n\t(N'file-data', N'demo/ssiswork/客户数据', N'Sheet1', N'dbo.Customer'),\n\t(N'file-data', N'demo/ssiswork/订单数据', N'Sheet1', N'dbo.[Order]')\n) t1(container_name,direcotry_name,sheet_name, stg);",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "azuresql_dst",
						"type": "DatasetReference",
						"parameters": {
							"tableNameWithSchema": " "
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Get Metadata1",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "Stored procedure1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "storage_excel_src",
									"type": "DatasetReference",
									"parameters": {
										"containerName": {
											"value": "@item().containerName",
											"type": "Expression"
										},
										"directoryName": {
											"value": "@item().directoryName",
											"type": "Expression"
										},
										"fileName": " ",
										"sheetName": " "
									}
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "ForEach1_copy1",
							"type": "ForEach",
							"dependsOn": [
								{
									"activity": "Get Metadata1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Get Metadata1').output.childItems",
									"type": "Expression"
								},
								"activities": [
									{
										"name": "Copy data1_copy1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "ExcelSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												}
											},
											"sink": {
												"type": "AzureSqlSink",
												"writeBehavior": "insert",
												"sqlWriterUseTableLock": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "storage_excel_src",
												"type": "DatasetReference",
												"parameters": {
													"containerName": {
														"value": "@item().containerName",
														"type": "Expression"
													},
													"directoryName": {
														"value": "@item().directoryName",
														"type": "Expression"
													},
													"fileName": {
														"value": "@item().name",
														"type": "Expression"
													},
													"sheetName": {
														"value": "@variables('sheetName')",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "azuresql_dst",
												"type": "DatasetReference",
												"parameters": {
													"tableNameWithSchema": {
														"value": "@replace(replace(item().stg, '[', ''), ']', '')",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "dbo.p_truncate_table",
								"storedProcedureParameters": {
									"tableNameWithSchema": {
										"value": {
											"value": "@item().stg",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "sqldb_dw",
								"type": "LinkedServiceReference",
								"parameters": {
									"dbName": "sqldevswcd",
									"dbUserName": "sqladminuser01",
									"dbUserPwd": "1qaz!QAZ",
									"dbServerName": "sqlserverdevswcd.database.windows.net"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"sheetName": {
				"type": "String",
				"defaultValue": "sheet1"
			}
		},
		"folder": {
			"name": "demo"
		},
		"annotations": [],
		"lastPublishTime": "2023-08-29T08:24:42Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
{
	"name": "control_getmetadate",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "adfdemo_asql_employee",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists",
						"columnCount",
						"structure"
					]
				}
			},
			{
				"name": "Get Metadata1_copy1",
				"type": "GetMetadata",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "storge_excel_customer",
						"type": "DatasetReference"
					},
					"fieldList": [
						"columnCount",
						"contentMD5",
						"exists",
						"itemName",
						"itemType",
						"lastModified",
						"size",
						"structure"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Get Metadata2",
				"type": "GetMetadata",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "storage_excel_src",
						"type": "DatasetReference",
						"parameters": {
							"containerName": "file-data",
							"directoryName": "demo/demofile",
							"fileName": " ",
							"sheetName": " "
						}
					},
					"fieldList": [
						"childItems",
						"itemName",
						"itemType",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Wait1",
				"type": "Wait",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			},
			{
				"name": "Until1",
				"type": "Until",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals('Failed', coalesce(body('MyUnauthenticatedActivity')?.status, actions('MyUnauthenticatedActivity')?.status, 'null'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "MyUnauthenticatedActivity",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "MyWaitActivity",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://www.fake.com/",
								"method": "GET",
								"headers": {
									"Content-Type": "application/json"
								}
							}
						},
						{
							"name": "MyWaitActivity",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			},
			{
				"name": "Switch1",
				"type": "Switch",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "3",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "Case1"
						},
						{
							"value": "Case2"
						},
						{
							"value": "Case3"
						}
					],
					"defaultActivities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "storage_binary",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "sqldb_dw",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "sqldevswcd",
						"dbUserName": "sqladminuser01",
						"dbUserPwd": "1qaz!QAZ",
						"dbServerName": "sqlserverdevswcd.database.windows.net"
					}
				}
			},
			{
				"name": "Append variable1",
				"type": "AppendVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "animalsArray",
					"value": {
						"value": "Cat",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "name",
					"value": {
						"value": "123",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Append variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('animalsArray')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Set variable2",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "name",
								"value": {
									"value": "@item()",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Web1",
				"type": "WebActivity",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "WebHook1",
				"type": "WebHook",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"timeout": "00:10:00"
				}
			}
		],
		"parameters": {
			"inputPath": {
				"type": "string",
				"defaultValue": "file-data/demo/demofile"
			},
			"outputPath1": {
				"type": "string",
				"defaultValue": "file-data/demo/demofileoutput1"
			},
			"outputPath2": {
				"type": "string",
				"defaultValue": "file-data/demo/demofileoutput2"
			},
			"outputPath3": {
				"type": "string",
				"defaultValue": "file-data/demo/demofileoutput2"
			},
			"routeSelect": {
				"type": "string",
				"defaultValue": "1"
			}
		},
		"variables": {
			"name": {
				"type": "String"
			},
			"animalsArray": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "demo"
		},
		"annotations": [],
		"lastPublishTime": "2023-09-18T09:40:40Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
{
	"name": "control flow demo",
	"properties": {
		"activities": [
			{
				"name": "Filter1",
				"type": "Filter",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.ARR",
						"type": "Expression"
					},
					"condition": {
						"value": "@greater(item(), 3)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "varValue",
								"value": {
									"value": "@item()",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "ForEach1_copy1",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.ARR",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Set variable1_copy1",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "varValue",
								"value": {
									"value": "@item()",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Switch1",
				"type": "Switch",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"cases": [
						{
							"value": "Case1"
						}
					]
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": []
			},
			{
				"name": "ForEach2",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@range(0, 2)",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Set variable2",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "loop_value",
								"value": {
									"value": "@item()",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select top (10) object_id, name from sys.objects;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "asql_dataset",
						"type": "DatasetReference",
						"parameters": {
							"schemaName": " ",
							"tableName": " "
						}
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"ARR": {
				"type": "array",
				"defaultValue": [
					1,
					2,
					3,
					4,
					5
				]
			}
		},
		"variables": {
			"varValue": {
				"type": "Integer"
			},
			"loop_value": {
				"type": "Integer"
			},
			"animal": {
				"type": "String"
			}
		},
		"folder": {
			"name": "demo"
		},
		"annotations": [],
		"lastPublishTime": "2023-09-15T06:28:21Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}